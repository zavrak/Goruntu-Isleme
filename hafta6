#!/usr/bin/env python
# coding: utf-8



import matplotlib.pyplot as plt
import matplotlib.image as mpimg
import numpy as np
img=mpimg.imread('images.jpeg')
get_ipython().run_line_magic('matplotlib', 'inline')
plt.imshow(img)




def get_distance (v):
    w=[1/3,1/3,1/3]
    a,b,c=v[0],v[1],v[2]
    w1,w2,w3=w[0],w[1],w[2]
    d=((a**2)*w1+(b**2)*w2+(c**2)*w3)**.5
    return d




def convert_rgbtogray(im_1):
    m=im_1.shape[0]
    n=im_1.shape[1]
    graypic=np.zeros((m,n))
    for i in range (m):
        for j in range(n):
            graypic[i,j]=get_distance(im_1[i,j,:])
    return graypic




gray_pic=convert_rgbtogray(img)




def graylevel_to_blackwhite(image_graylevel, threshold):       #fonksiyona parametre olarak bir eşik değeri gönderilmeli                                                            #parametre olarak gönderilen görüntü gray level formatta olmalı
    m,n = (image_graylevel.shape[0], image_graylevel.shape[1])
    image_blackwhite = np.zeros((m,n))
    for i in range(m):
        for j in range(n):
            if (image_graylevel[i,j] > threshold):
                image_blackwhite[i,j] = 1
            else:
                image_blackwhite[i,j] = 0
    return image_blackwhite

image_blackwhite = graylevel_to_blackwhite(gray_pic, 125)




def compare_internal(part_of_image):
    part_of_image = part_of_image.ravel()            
    birler=0
    sifirlar=0
    
    for i in part_of_image:
        if(i==1):
            birler=birler+1
        else:
            sifirlar=sifirlar+1
            
    if(birler==3 and sifirlar==1):
        return True
    else:
        return False




def compare_external(part_of_image):
    part_of_image = part_of_image.ravel()
    birler=0
    sifirlar=0
    
    for i in part_of_image:
        if(i==1):
            birler=birler+1
        else:
            sifirlar=sifirlar+1
            
    if(birler==1 and sifirlar==3):
        return True
    else:
        return False




def obje_sayisi(image_bw):                  #parametre olarak gönderilen görüntü siyah beyaz olmalı
    m = image_bw.shape[0]
    n = image_bw.shape[1]
    
    pix_ext=0
    pix_int=0
    for i in range(1, m-1):
        for j in range(1, n-1):
            if(compare_external(image_bw[i-1:i+1, j-1:j+1])):
                pix_ext=pix_ext+1
            if(compare_internal(image_bw[i-1:i+1, j-1:j+1])):
                pix_int=pix_int+1
                
    print(pix_ext,pix_int)
    print("Görüntüdeki obje sayısı", (pix_ext-pix_int)/4)




obje_sayisi(image_blackwhite)






